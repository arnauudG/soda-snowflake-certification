name: Soda Scan (RAW) - Push & PR

on:
  push:
    branches:
      - main
    paths:
      - "soda/configuration/configuration_raw.yml"
      - "soda/checks/raw/**"
      - "dbt/**"
      - "airflow/**"
      - ".github/workflows/soda-raw.yml"
      - "**/*.sql"
      - "**/*.yml"
      - "**/*.yaml"
  pull_request:
    paths:
      - "soda/configuration/configuration_raw.yml"
      - "soda/checks/raw/**"
      - "dbt/**"
      - "airflow/**"
      - ".github/workflows/soda-raw.yml"
      - "**/*.sql"
      - "**/*.yml"
      - "**/*.yaml"

concurrency:
  group: soda-raw-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  soda_scan_raw_push:
    name: Run Soda Scan on RAW (Push)
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional but helpful to print which config & checks will be used
      - name: List Soda files
        run: |
          echo "Configuration:"
          ls -la soda/configuration/configuration_raw.yml || true
          echo "Checks:"
          ls -la soda/checks/raw || true

      - name: Perform Soda Scan (RAW) - Push
        id: soda
        run: |
          # Install Soda Core (latest stable version)
          pip install soda-core==3.5.6
          
          # Create a temporary configuration file with actual values
          cat > temp_config.yml << EOF
          data_source soda_certification_raw:
            type: snowflake
            connection:
              account: $SNOWFLAKE_ACCOUNT
              username: $SNOWFLAKE_USER
              password: $SNOWFLAKE_PASSWORD
              role: $SNOWFLAKE_ROLE
              warehouse: $SNOWFLAKE_WAREHOUSE
              database: $SNOWFLAKE_DATABASE
              schema: RAW
              insecure_mode: True
              query_tag: 'soda_quality_check_raw'
              network_timeout: 600
          
          soda_cloud:
            host: $SODA_CLOUD_HOST
            api_key_id: $SODA_CLOUD_API_KEY_ID
            api_key_secret: $SODA_CLOUD_API_KEY_SECRET
          EOF
          
          # Run Soda scan with the temporary config
          soda scan -d soda_certification_raw -c temp_config.yml ./soda/checks/raw/
        env:
          # ---- Soda Cloud (store in GitHub Secrets) ----
          SODA_CLOUD_HOST: ${{ secrets.SODA_CLOUD_HOST }}
          SODA_CLOUD_API_KEY_ID: ${{ secrets.SODA_CLOUD_API_KEY_ID }}
          SODA_CLOUD_API_KEY_SECRET: ${{ secrets.SODA_CLOUD_API_KEY_SECRET }}

          # ---- Snowflake (store in GitHub Secrets) ----
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}

      # Upload Soda run artifacts for debugging/traceability
      - name: Upload Soda Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: soda-raw-artifacts
          path: |
            .soda/**/*
            soda/**/*
          if-no-files-found: ignore

      # Handle push event notifications
      - name: Notify on push failure
        if: failure()
        run: |
          echo "❌ Soda RAW checks failed on push to ${{ github.ref_name }}"
          echo "Check the job logs and the uploaded artifacts (soda-raw-artifacts) for details."
          echo "Commit: ${{ github.sha }}"
          echo "Author: ${{ github.actor }}"

      # Success notification for push events
      - name: Notify on push success
        if: success()
        run: |
          echo "✅ Soda RAW checks passed on push to ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Author: ${{ github.actor }}"

  soda_scan_raw_pr:
    name: Run Soda Scan on RAW (Pull Request)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional but helpful to print which config & checks will be used
      - name: List Soda files
        run: |
          echo "Configuration:"
          ls -la soda/configuration/configuration_raw.yml || true
          echo "Checks:"
          ls -la soda/checks/raw || true

      - name: Perform Soda Scan (RAW) - PR
        id: soda
        uses: sodadata/soda-github-action@main
        env:
          # ---- Soda Cloud (store in GitHub Secrets) ----
          SODA_CLOUD_HOST: ${{ secrets.SODA_CLOUD_HOST }}
          SODA_CLOUD_API_KEY_ID: ${{ secrets.SODA_CLOUD_API_KEY_ID }}
          SODA_CLOUD_API_KEY_SECRET: ${{ secrets.SODA_CLOUD_API_KEY_SECRET }}

          # ---- Snowflake (store in GitHub Secrets) ----
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}

        with:
          # Pin the Soda Library version (adjust if you need a different one)
          soda_library_version: v1.0.4

          # Match the data source name defined in your configuration file:
          #   data_source soda_certification_raw:
          data_source: soda_certification_raw

          # Paths relative to repo root
          configuration: ./soda/configuration/configuration_raw.yml
          checks: ./soda/checks/raw

      # Upload Soda run artifacts for debugging/traceability
      - name: Upload Soda Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: soda-raw-artifacts
          path: |
            .soda/**/*
            soda/**/*
          if-no-files-found: ignore