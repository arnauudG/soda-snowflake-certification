name: Soda Scan (RAW) - Push & PR

on:
  push:
    branches: [ main ]
    paths:
      - "soda/configuration/configuration_raw.yml"
      - "soda/checks/raw/**"
      - "dbt/**"
      - "airflow/**"
      - ".github/workflows/soda-raw.yml"
      - "**/*.sql"
      - "**/*.yml"
      - "**/*.yaml"
  pull_request:
    paths:
      - "soda/configuration/configuration_raw.yml"
      - "soda/checks/raw/**"
      - "dbt/**"
      - "airflow/**"
      - ".github/workflows/soda-raw.yml"
      - "**/*.sql"
      - "**/*.yml"
      - "**/*.yaml"

concurrency:
  group: soda-raw-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  soda_scan_raw:
    name: Run Soda Scan on RAW
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List Soda files
        run: |
          echo "Configuration:"
          ls -la soda/configuration/configuration_raw.yml || true
          echo "Checks:"
          ls -la soda/checks/raw || true

      - name: Perform Soda Scan (RAW)
        id: soda
        uses: sodadata/soda-github-action@main
        continue-on-error: true
        env:
          # ---- Soda Cloud (store in GitHub Secrets) ----
          SODA_CLOUD_HOST: ${{ secrets.SODA_CLOUD_HOST }}
          SODA_CLOUD_API_KEY_ID: ${{ secrets.SODA_CLOUD_API_KEY_ID }}
          SODA_CLOUD_API_KEY_SECRET: ${{ secrets.SODA_CLOUD_API_KEY_SECRET }}

          # ---- Snowflake (store in GitHub Secrets) ----
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}

        with:
          soda_library_version: v1.0.4
          data_source: soda_certification_raw
          configuration: ./soda/configuration/configuration_raw.yml
          checks: ./soda/checks/raw

      # Persist outputs to files so later steps can read them reliably
      - name: Capture Soda outputs
        id: capture
        run: |
          echo '${{ steps.soda.outputs.scan-results }}' > soda_scan_results_raw.json
          echo "cloud_link=${{ steps.soda.outputs.scan-cloud-link }}" >> $GITHUB_OUTPUT
          echo "exit_code=${{ steps.soda.outputs.scan-exit-code }}" >> $GITHUB_OUTPUT

      # Human-friendly summary in the job summary (works for push & PR)
      - name: Write summary
        run: |
          echo "## Soda RAW scan" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Cloud report: ${{ steps.capture.outputs.cloud_link }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat soda_scan_results_raw.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      # Comment on the PR only when we are in a PR context
      - name: Comment results on PR (only on PRs)
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          issue_number: ${{ github.event.pull_request.number }}
          mode: upsert
          create_if_not_exists: true
          message: |
            ${{ steps.capture.outputs.exit_code != '0' && 'ðŸ”´' || 'ðŸŸ¢' }} Soda scan completed with the following results:

            ```json
            ${{ steps.soda.outputs.scan-results }}
            ```

            [View the full scan results](${{ steps.capture.outputs.cloud_link }})

      # Upload artifacts for debugging/traceability
      - name: Upload Soda Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: soda-raw-artifacts
          path: |
            .soda/**/*
            soda/**/*
            soda_scan_results_raw.json
          if-no-files-found: ignore

      # Fail the job based on Soda's exit code:
      # 0 = success, 1/2 = failures (2 in your log since 5 checks failed)
      - name: Fail if Soda reported failures
        run: |
          code='${{ steps.capture.outputs.exit_code }}'
          echo "Soda exit code: $code"
          if [ "$code" != "0" ]; then
            echo "Soda reported failing checks."
            exit "$code"
          fi