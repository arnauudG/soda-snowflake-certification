# RAW Layer - Products Table Quality Checks
# Database: SODA_CERTIFICATION, Schema: RAW
# Table: PRODUCTS (1,000+ records)
# Purpose: Initial data quality assessment with relaxed thresholds

# Dataset discovery configuration for Soda Cloud
discover datasets:
  datasets:
    - include PRODUCTS

# Column profiling configuration for Soda Cloud
profile columns:
  columns:
    - PRODUCTS.%
    - exclude PRODUCTS.CREATED_AT
    - exclude PRODUCTS.UPDATED_AT

# Sample datasets configuration for Soda Cloud
sample datasets:
  datasets:
    - include PRODUCTS

checks for PRODUCTS:
  # Schema validation
  - schema:
      name: "Product table schema validation"
      fail:
        when required column missing: [PRODUCT_ID, PRODUCT_NAME, CATEGORY, SUBCATEGORY, PRICE, CURRENCY, DESCRIPTION, BRAND, SKU, WEIGHT, DIMENSIONS, CREATED_AT, UPDATED_AT]
        when forbidden column present: []
        when wrong column type:
          PRODUCT_ID: varchar
          PRODUCT_NAME: varchar
          CATEGORY: varchar
          SUBCATEGORY: varchar
          PRICE: decimal
          CURRENCY: varchar
          DESCRIPTION: varchar
          BRAND: varchar
          SKU: varchar
          WEIGHT: decimal
          DIMENSIONS: varchar
          CREATED_AT: timestamp
          UPDATED_AT: timestamp
  # Row count checks
  - row_count between 800 and 1200:
      name: "Product count within expected range"
  
  # Completeness checks (relaxed for raw data)
  - missing_count(PRODUCT_ID) = 0:
      name: "No missing product IDs"
  
  - missing_count(PRODUCT_NAME) < 50:
      name: "Minimal missing product names"
  
  - missing_count(PRICE) < 100:
      name: "Minimal missing prices"
  
  # Uniqueness checks
  - duplicate_count(PRODUCT_ID) = 0:
      name: "Product IDs are unique"
  
  # Validity checks
  - invalid_count(PRICE) < 100:
      name: "Invalid price values"
      valid min: -50
      valid max: 10000
  
  # Range checks
  - min(PRICE) >= -50:
      name: "Negative prices within raw tolerance"
  
  - max(PRICE) <= 10000:
      name: "Maximum price within business limits"
  
  # Failed row samples for detailed analysis
  - failed rows:
      name: "Sample failed product records for analysis"
      samples limit: 50
      fail query: |
        SELECT PRODUCT_ID, PRODUCT_NAME, PRICE, SKU, WEIGHT
        FROM PRODUCTS
        WHERE PRODUCT_ID IS NULL 
           OR PRODUCT_NAME IS NULL 
           OR PRICE IS NULL
           OR PRICE < -50
           OR SKU IS NULL
      fail: when > 0