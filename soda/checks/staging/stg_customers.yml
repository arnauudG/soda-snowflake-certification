# STAGING Layer - Customers Table Quality Checks
# Database: SODA_CERTIFICATION, Schema: STAGING
# Table: stg_customers (10,000+ records)
# Purpose: Data quality validation after initial transformation

# Dataset discovery configuration for Soda Cloud
discover datasets:
  datasets:
    - include STG_CUSTOMERS

# Soda Cloud Profiling Configuration for Partner Certification
profile columns:
  columns:
    - STG_CUSTOMERS.%
    - exclude STG_CUSTOMERS.CREATED_AT
    - exclude STG_CUSTOMERS.UPDATED_AT
    - exclude STG_CUSTOMERS.INGESTION_TIMESTAMP
    - exclude STG_CUSTOMERS.HAS_MISSING_EMAIL
    - exclude STG_CUSTOMERS.HAS_MISSING_PHONE
    - exclude STG_CUSTOMERS.HAS_MISSING_NAME

# Sample datasets configuration for Soda Cloud
sample datasets:
  datasets:
    - include STG_CUSTOMERS

checks for STG_CUSTOMERS:
  # Row count checks with sampling
  - row_count between 8000 and 12000:
      name: "Staging customer count within expected range"
      samples limit: 2000
  
  # Schema validation
  - schema:
      name: "Staging customer table schema validation"
      fail:
        when required column missing: [CUSTOMER_ID, FIRST_NAME, LAST_NAME, EMAIL, DATA_QUALITY_SCORE]
        when forbidden column present: [DUPLICATE_ID, TEST_COLUMN]
  
  # Completeness checks (stricter than raw) with sampling
  - missing_count(CUSTOMER_ID) = 0:
      name: "No missing customer IDs in staging"
      samples limit: 2000
  
  - missing_count(FIRST_NAME) < 50:
      name: "Minimal missing first names in staging"
      samples limit: 2000
  
  - missing_count(EMAIL) < 1000:
      name: "Email completeness in staging"
      samples limit: 2000
  
  # Data quality score checks with sampling
  - avg(DATA_QUALITY_SCORE) > 80:
      name: "Average data quality score above 80"
      samples limit: 2000
  
  # Uniqueness checks (stricter than raw) with sampling
  - duplicate_count(CUSTOMER_ID) = 0:
      name: "Customer IDs are unique in staging"
      samples limit: 2000
  
  - duplicate_count(EMAIL) < 100:
      name: "Email duplicates reduced in staging"
      samples limit: 2000
  
  # Validity checks (stricter than raw) with sampling
  - invalid_count(EMAIL) < 200:
      name: "Invalid email formats reduced in staging"
      valid regex: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
      samples limit: 2000
  
  # Freshness checks
  - freshness(CREATED_AT) < 1d:
      name: "Staging customer data is fresh"
  
  # Failed row samples for detailed analysis
  - failed rows:
      samples limit: 100
      fail query: |
        SELECT CUSTOMER_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, DATA_QUALITY_SCORE
        FROM STG_CUSTOMERS
        WHERE CUSTOMER_ID IS NULL 
           OR FIRST_NAME IS NULL 
           OR LAST_NAME IS NULL
           OR EMAIL IS NULL
           OR NOT REGEXP_LIKE(EMAIL, '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$')
           OR DATA_QUALITY_SCORE < 50
      name: "Sample failed staging customer records for analysis"
      fail: when > 200
